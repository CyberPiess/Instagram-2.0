// Code generated by MockGen. DO NOT EDIT.
// Source: handler.go

// Package mock_application is a generated GoMock package.
package mock_application

import (
	reflect "reflect"

	post "github.com/CyberPiess/instagram/internal/domain/post"
	gomock "github.com/golang/mock/gomock"
)

// MockpostService is a mock of postService interface.
type MockpostService struct {
	ctrl     *gomock.Controller
	recorder *MockpostServiceMockRecorder
}

// MockpostServiceMockRecorder is the mock recorder for MockpostService.
type MockpostServiceMockRecorder struct {
	mock *MockpostService
}

// NewMockpostService creates a new mock instance.
func NewMockpostService(ctrl *gomock.Controller) *MockpostService {
	mock := &MockpostService{ctrl: ctrl}
	mock.recorder = &MockpostServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockpostService) EXPECT() *MockpostServiceMockRecorder {
	return m.recorder
}

// CreatePost mocks base method.
func (m *MockpostService) CreatePost(newPost post.Post, image post.Image) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePost", newPost, image)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePost indicates an expected call of CreatePost.
func (mr *MockpostServiceMockRecorder) CreatePost(newPost, image interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePost", reflect.TypeOf((*MockpostService)(nil).CreatePost), newPost, image)
}
